openapi: 3.0.0
info:
  title: LoRa Geräte API
  description: |
    API für den Zugriff auf LoRa-Geräte und deren Sensordaten

    # MQTT-Endpunkte
    Neben der REST-API stehen auch MQTT-Topics zur Verfügung.

    ## MQTT Broker
    - WebSocket URL: wss://mqtt.makerspace-partheland.de:443/mqtt

    ## Verfügbare Topics

    ### senseBox:home Daten (entspricht REST /v1/LoRaDevices/senseboxes)
    Topic: `senseBox:home/{device}`
    ```json
    {
      "fields": {
        "Beleuchtungsstaerke": 0,
        "GehaeuseTemp": 9,
        "Lautstaerke": 45.2,
        "Lautstaerke_Max": 48.1,
        "Luftdruck": 995.2,
        "Luftfeuchte": 84.3,
        "PM10": 38.2,
        "PM10_Max": 43.5,
        "PM2.5": 17.9,
        "PM25_Max": 19.3,
        "Temperatur": 7.9,
        "UV-Intensitaet": 0
      },
      "name": "Beucha_Nr1",
      "timestamp": 1743194885
    }
    ```

    ### Sensoren Daten (enthält REST /v1/LoRaDevices/waterlevels und weitere)
    Topic: `sensoren/{device}`
    ```json
    {
      "fields": {
        "bat": 3.264,
        "distance": 1493,
        "distance_to_ground": 1820,
        "latitude": 51.000000,
        "longitude": 12.000000,
        "meldestufe": 0,
        "us_sensor": 1,
        "water": "Parthe",
        "water_level": 327
      },
      "name": "LDDS75_Naunhof_1",
      "timestamp": 1743193867
    }
    ```

    ## Topic-Struktur
    - `senseBox:home/`: Enthält alle senseBox-Geräte (entspricht REST /v1/LoRaDevices/senseboxes)
    - `sensoren/`: Enthält Wasserstand-Sensoren und weitere Sensortypen (enthält REST /v1/LoRaDevices/waterlevels)

  version: 1.0.4
  contact:
    name: Makerspace Partheland e.V.
    url: https://makerspace-partheland.de

servers:
  - url: https://data.makerspace-partheland.de/
    description: Produktions-Server
    
tags:
  - name: "API v1 - Produktiv"
    description: "Produktive, stabile Endpunkte für den Live-Betrieb"
  - name: "API v2 - Unter Entwicklung"
    description: "Experimentelle Endpunkte - können sich ändern!"
    
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API-Key für detaillierte Informationen
      
  schemas:
    GeoJSONResponse:
      type: object
      properties:
        type:
          type: string
          example: "FeatureCollection"
        features:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: "Feature"
              geometry:
                type: object
                properties:
                  type:
                    type: string
                    example: "Point"
                  coordinates:
                    type: array
                    items:
                      type: number
                    example: [12.000000, 51.000000]
              properties:
                type: object
                description: "Gerätespezifische Attribute; insbesondere enthalten `osm` (openSenseMap) und `mspl` (Makerspace Partheland) URLs zu den jeweiligen Portalen mit UI-basierten Messwertansichten."
                additionalProperties: true

    MeasurementValueV2:
      type: object
      description: "Ein Messwert mit Einheit und Zeitstempel (ISO 8601)."
      properties:
        value:
          type: number
          description: "Gemessener Wert"
        unit:
          type: string
          description: "Einheiten-Code nach internationalem Standard (z. B. UN/CEFACT Recommendation 20/21), z. B. CEL, HPA, LX, DB, GQ, MMT, VLT"
        timestamp:
          type: string
          format: date-time
          description: "Zeitpunkt der Messung (UTC)"

    MeasurementsV2:
      type: object
      description: "Sammlung der aktuellen Sensormesswerte des Geräts. Schlüssel entsprechen den standardisierten Feldnamen."
      properties:
        temperature:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Lufttemperatur (Einheit CEL)"
        temperature_case:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Gehäusetemperatur (Einheit CEL)"
        humidity:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Relative Luftfeuchte (Einheit P1 = Prozent)"
        pressure:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Luftdruck (Einheit HPA)"
        illuminance:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Beleuchtungsstärke (Einheit LX)"
        uv:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "UV-Intensität (Einheit UV)"
        noise:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Schallpegel (Einheit DB)"
        noise_max:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Maximaler Schallpegel im Messintervall (Einheit DB)"
        pm10:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Feinstaub PM10 Massenkonzentration (Einheit GQ)"
        pm10_max:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Maximaler PM10-Wert im Messintervall (Einheit GQ)"
        pm2_5:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Feinstaub PM2.5 Massenkonzentration (Einheit GQ)"
        pm2_5_max:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Maximaler PM2.5-Wert im Messintervall (Einheit GQ)"
        water_level:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Wasserstand (Einheit MMT)"
        distance:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Abstand (Einheit MMT)"
        distance_to_ground:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Abstand zum Boden (Einheit MMT)"
        battery:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Batteriespannung (Einheit VLT)"
        water_temperature:
          $ref: '#/components/schemas/MeasurementValueV2'
          description: "Wassertemperatur (Einheit CEL)"

    DevicePropertiesV2:
      type: object
      properties:
        name:
          type: string
          description: "Name des Geräts (technischer Name; nicht 'displayname')"
        type:
          type: string
          description: "Typ des Geräts (SenseBoxDevice, WaterLevelDevice, TemperatureDevice)"
        status:
          type: string
          enum: [online, offline, pending, Online, Offline, Pending]
          description: "Aktueller Status"
        last_seen:
          type: string
          format: date-time
          description: "Letzter Kontakt (UTC)"
        last_seen_de:
          type: string
          description: "Letzter Kontakt (deutsche Zeit)"
        attributes:
          $ref: '#/components/schemas/AttributesPublicV2'
        measurements:
          $ref: '#/components/schemas/MeasurementsV2'

    DeviceFeatureV2:
      type: object
      properties:
        type:
          type: string
          example: "Feature"
        id:
          type: string
          description: "Eindeutige Geräte-ID"
        geometry:
          type: object
          properties:
            type:
              type: string
              example: "Point"
            coordinates:
              type: array
              items:
                type: number
              example: [12.000000, 51.000000]
          description: "WGS84-Geometrie des Geräts; Koordinaten in der Form [Längengrad, Breitengrad]."
        properties:
          $ref: '#/components/schemas/DevicePropertiesV2'

    DeviceGeoJSONResponseV2:
      type: object
      properties:
        type:
          type: string
          example: "FeatureCollection"
        features:
          type: array
          items:
            $ref: '#/components/schemas/DeviceFeatureV2'

    # Standort-Aggregation (location + sensor) als eigenes Feature-Schema
    AggregatedLocationPropertiesV2:
      type: object
      properties:
        location:
          type: string
          description: "Standortname (z. B. naunhof)"
        sensor:
          type: string
          description: "Sensorname (z. B. temperature)"
        aggregation:
          type: string
          enum: [median, mean, min, max, latest]
          description: "Aggregationsmethode"
        value:
          type: number
          nullable: true
          description: "Aggregierter Messwert"
        unit:
          type: string
          description: "Einheiten-Code (z. B. CEL, DB, LX, MMT)"
        deviceCount:
          type: integer
          description: "Anzahl einbezogener Geräte"
        devices:
          type: array
          description: "Liste der Measurement-Namen beteiligter Geräte"
          items:
            type: string
        timestamp:
          type: string
          format: date-time
          description: "Erzeugungszeitpunkt der Aggregation (UTC)"

    AggregatedLocationFeatureV2:
      type: object
      properties:
        type:
          type: string
          example: "Feature"
        geometry:
          type: object
          properties:
            type:
              type: string
              example: "Point"
            coordinates:
              type: array
              items:
                type: number
              example: [12.586797, 51.283337]
        properties:
          $ref: '#/components/schemas/AggregatedLocationPropertiesV2'

    DeviceOrLocationGeoJSONResponseV2:
      type: object
      properties:
        type:
          type: string
          example: "FeatureCollection"
        features:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/DeviceFeatureV2'
              - $ref: '#/components/schemas/AggregatedLocationFeatureV2'

    ErrorResponseV2:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: "Fehlercode (z. B. INVALID_PARAMETER_COMBINATION, INVALID_SENSOR, INVALID_API_KEY, NOT_FOUND)"
            message:
              type: string
              description: "Beschreibung des Fehlers"
            details:
              type: object
              additionalProperties: true
              description: "Optionale Detailinformationen"
        timestamp:
          type: string
          format: date-time
          description: "Zeitpunkt der Fehlererzeugung (UTC)"

    AttributesPublicV2:
      type: object
      description: "Öffentliche Geräteattribute mit Portal-Links und Anzeigeinformationen."
      properties:
        osm:
          type: string
          format: uri
          description: "Link zur openSenseMap-Geräteseite (UI mit Messwerten)."
        mspl:
          type: string
          format: uri
          description: "Link zur Makerspace-Partheland-Visualisierung (UI mit Messwerten)."
        measurement:
          type: string
          description: "Interner Messwert-/Measurement-Name des Geräts."
        displayname:
          type: string
          description: "Nutzerfreundlicher Anzeigename des Geräts."
      additionalProperties: true

paths:
  /v1/LoRaDevices:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte alle LoRa-Geräte"
      responses:
        '200':
          description: "Eine Liste aller LoRa-Geräte"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            deviceType:
                              type: string
                            binaryStatus:
                              type: integer
                              enum: [0, 1]
                            active:
                              type: boolean
                            name:
                              type: string
                            displayName:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            measurement:
                              type: string
                            openSenseMap:
                              type: string
                            url:
                              type: string
                            fields:
                              type: object
                              description: "Ein Objekt, das die verschiedenen Sensormesswerte des Geräts enthält. Die Felder variieren je nach Gerätetyp."
                              properties:
                                Temperatur:
                                  type: number
                                Luftfeuchte:
                                  type: number
                                water_level:
                                  type: number
              examples:
                loRaDeviceExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          deviceType: "senseBox"
                          binaryStatus: 1
                          active: true
                          name: "sensebox-beucha-1"
                          displayName: "sensebox-beucha-1"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:20:09"
                          measurement: "Beucha_Nr1"
                          openSenseMap: "https://opensensemap.org/explore/6214b789ef6200001d2971bc"
                          url: "https://sensoren.makerspace-partheland.de/d/XrweFEQnk/station-beucha-nr-1"
                          fields:
                            Temperatur: 8
                            Luftfeuchte: 86
                      - type: "Feature"
                        properties:
                          deviceType: "waterLevelSensor"
                          binaryStatus: 1
                          active: true
                          name: "LDDS75 Naunhof 2"
                          displayName: "LDDS75 Naunhof 2"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:05:17"
                          measurement: "LDDS75_Naunhof_2"
                          openSenseMap: ""
                          url: "https://sensoren.makerspace-partheland.de/d/ae459r4tpq03ke/pegelstande"
                          fields:
                            water_level: 17
                            bat: 3.328
                            water_temp: 15.2

  /v1/LoRaDevices/senseboxes:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte alle senseBox-Geräte mit deren Sensordaten"
      parameters:
        - name: device
          in: query
          required: false
          schema:
            type: string
          example: Beucha_Nr1
          description: "Filter für ein spezifisches senseBox-Gerät mit dessen Sensordaten"
      responses:
        '200':
          description: "Eine Liste aller senseBox-Geräte"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            deviceType:
                              type: string
                            binaryStatus:
                              type: integer
                              enum: [0, 1]
                            active:
                              type: boolean
                            name:
                              type: string
                            displayName:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            measurement:
                              type: string
                            openSenseMap:
                              type: string
                            url:
                              type: string
                            fields:
                              type: object
                              properties:
                                Beleuchtungsstaerke:
                                  type: number
                                GehaeuseTemp:
                                  type: number
                                Lautstaerke:
                                  type: number
                                Lautstaerke_Max:
                                  type: number
                                Luftdruck:
                                  type: number
                                Luftfeuchte:
                                  type: number
                                PM10:
                                  type: number
                                PM10_Max:
                                  type: number
                                PM2.5:
                                  type: number
                                PM25_Max:
                                  type: number
                                Temperatur:
                                  type: number
                                "UV-Intensitaet":
                                  type: number
              examples:
                senseBoxExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          deviceType: "senseBox"
                          binaryStatus: 1
                          active: true
                          name: "sensebox-beucha-1"
                          displayName: "sensebox-beucha-1"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:20:09"
                          measurement: "Beucha_Nr1"
                          openSenseMap: "https://opensensemap.org/explore/6214b789ef6200001d2971bc"
                          url: "https://sensoren.makerspace-partheland.de/d/XrweFEQnk/station-beucha-nr-1"
                          fields:
                            Beleuchtungsstaerke: 0
                            GehaeuseTemp: 9.4
                            Lautstaerke: 48.1
                            Lautstaerke_Max: 49.4
                            Luftdruck: 995.3
                            Luftfeuchte: 86
                            PM10: 39.7
                            PM10_Max: 41.7
                            PM2.5: 16.8
                            PM25_Max: 17.9
                            Temperatur: 8
                            "UV-Intensitaet": 0

  /v1/LoRaDevices/senseboxes/health:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte den Status der senseBox-Geräte"
      parameters:
        - name: device
          in: query
          required: false
          schema:
            type: string
          example: Beucha_Nr1
      responses:
        '200':
          description: "Aktueller Status der senseBox-Geräte"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            name:
                              type: string
                            measurement:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
              examples:
                senseBoxHealthExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          name: "senseBox1"
                          measurement: "sensebox_1"
                          status: "online"
                          lastSeen: "2023-10-01T12:00:00Z"

  /v1/LoRaDevices/senseboxes/details:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte detaillierte Sensordaten einer bestimmten senseBox:home"
      description: "Dieser Endpunkt liefert detaillierte Informationen und aktuelle Sensordaten einer spezifischen senseBox:home. Die Daten beinhalten alle verfügbaren Sensorwerte wie Temperatur, Luftfeuchtigkeit, Luftdruck, Feinstaubwerte und mehr."
      parameters:
        - name: device
          in: query
          required: true
          schema:
            type: string
          example: Beucha_Nr1
          description: "Name der senseBox:home, deren Details abgefragt werden sollen"
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: "Detaillierte Informationen einer senseBox:home"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            binaryStatus:
                              type: integer
                              enum: [0, 1]
                            active:
                              type: boolean
                            name:
                              type: string
                            displayName:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            measurement:
                              type: string
                            openSenseMap:
                              type: string
                            url:
                              type: string
                            fields:
                              type: object
                              properties:
                                Beleuchtungsstaerke:
                                  type: number
                                GehaeuseTemp:
                                  type: number
                                Lautstaerke:
                                  type: number
                                Lautstaerke_Max:
                                  type: number
                                Luftdruck:
                                  type: number
                                Luftfeuchte:
                                  type: number
                                PM10:
                                  type: number
                                PM10_Max:
                                  type: number
                                PM2.5:
                                  type: number
                                PM25_Max:
                                  type: number
                                Temperatur:
                                  type: number
                                "UV-Intensitaet":
                                  type: number
                        geometry:
                          type: object
                          properties:
                            type:
                              type: string
                            coordinates:
                              type: array
                              items:
                                type: number
              examples:
                senseBoxDetailsExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          binaryStatus: 1
                          active: true
                          name: "sensebox-beucha-1"
                          displayName: "sensebox-beucha-1"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:20:09"
                          measurement: "Beucha_Nr1"
                          openSenseMap: "https://opensensemap.org/explore/6214b789ef6200001d2971bc"
                          url: "https://sensoren.makerspace-partheland.de/d/XrweFEQnk/station-beucha-nr-1"
                          fields:
                            Beleuchtungsstaerke: 0
                            GehaeuseTemp: 9.2
                            Lautstaerke: 48
                            Lautstaerke_Max: 51.4
                            Luftdruck: 995.2
                            Luftfeuchte: 85.3
                            PM10: 34.3
                            PM10_Max: 36.2
                            PM2.5: 16
                            PM25_Max: 16.3
                            Temperatur: 7.9
                            "UV-Intensitaet": 0
                        geometry:
                          type: "Point"
                          coordinates: [12.000000, 51.000000]

  /v1/LoRaDevices/waterlevels:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte alle Wasserstand-Geräte"
      parameters:
        - name: device
          in: query
          required: false
          schema:
            type: string
          example: LDDS75_Naunhof_2
          description: "Filter für ein spezifisches Wasserstand-Gerät mit dessen Sensordaten"
      responses:
        '200':
          description: "Eine Liste aller Wasserstand-Geräte mit deren Sensordaten"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            deviceType:
                              type: string
                            binaryStatus:
                              type: integer
                              enum: [0, 1]
                            active:
                              type: boolean
                            name:
                              type: string
                            displayName:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            measurement:
                              type: string
                            openSenseMap:
                              type: string
                            url:
                              type: string
                            fields:
                              type: object
                              properties:
                                bat:
                                  type: number
                                  description: "Batteriestand in Volt"
                                distance:
                                  type: number
                                  description: "Gemessene Distanz in mm"
                                distance_to_ground:
                                  type: number
                                  description: "Distanz zum Boden in mm"
                                meldestufe:
                                  type: number
                                  description: "Aktuelle Hochwasser-Meldestufe"
                                water:
                                  type: string
                                  description: "Name des Gewässers"
                                water_level:
                                  type: number
                                  description: "Aktueller Wasserstand in cm"
                                water_temp:
                                  type: number
                                  description: "Die Wassertemperatur in Grad Celsius (falls vom Sensor unterstützt)."
                                water_depth:
                                  type: number
                                  description: "Gemessene Wassertiefe in cm (falls vom Sensor unterstützt)."
                                battery_voltage:
                                  type: number
                                  description: "Spannung der externen Stromversorgung in Volt (falls vom Sensor unterstützt)."
                                current_4_20ma:
                                  type: number
                                  description: "Messwert des 4-20mA Analogeingangs in Milliampere (falls vom Sensor unterstützt)."
                                voltage_input:
                                  type: number
                                  description: "Messwert des analogen Spannungseingangs in Volt (falls vom Sensor unterstützt)."
              examples:
                waterLevelExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          deviceType: "waterLevelSensor"
                          active: true
                          name: "LDDS75 Naunhof 2"
                          displayName: "LDDS75 Naunhof 2"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:05:17"
                          measurement: "LDDS75_Naunhof_2"
                          openSenseMap: ""
                          url: "https://sensoren.makerspace-partheland.de/d/ae459r4tpq03ke/pegelstande"
                          fields:
                            bat: 3.328
                            distance: 1583
                            distance_to_ground: 1600
                            meldestufe: 0
                            water: "Parthe"
                            water_level: 17
                            water_temp: 15.2
                            water_depth: 52.78
                            battery_voltage: 3.335
                            current_4_20ma: 6.815
                            voltage_input: 0

  /v1/LoRaDevices/waterlevels/health:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte den Status der Wasserstand-Geräte"
      parameters:
        - name: device
          in: query
          required: false
          schema:
            type: string
          example: LDDS75_Naunhof_1
      responses:
        '200':
          description: "Aktueller Status der Wasserstand-Geräte"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            name:
                              type: string
                            measurement:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            water_level:
                              type: number
                              description: "Aktueller Wasserstand in cm"
                            water_temp:
                              type: number
                              description: "Die Wassertemperatur in Grad Celsius (falls vom Sensor unterstützt)."
                            water_depth:
                              type: number
                              description: "Gemessene Wassertiefe in cm (falls vom Sensor unterstützt)."
                            battery_voltage:
                              type: number
                              description: "Spannung der externen Stromversorgung in Volt (falls vom Sensor unterstützt)."
                            current_4_20ma:
                              type: number
                              description: "Messwert des 4-20mA Analogeingangs in Milliampere (falls vom Sensor unterstützt)."
                            voltage_input:
                              type: number
                              description: "Messwert des analogen Spannungseingangs in Volt (falls vom Sensor unterstützt)."
              examples:
                waterLevelHealthExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          name: "WaterLevel1"
                          measurement: "waterLevel_1"
                          status: "online"
                          lastSeen: "2023-10-01T12:00:00Z"
                          water_level: 17
                          water_temp: 15.2
                          water_depth: 52.78
                          battery_voltage: 3.335
                          current_4_20ma: 6.815
                          voltage_input: 0
                        geometry:
                          type: "Point"
                          coordinates: [12.000000, 51.000000]

  /v1/LoRaDevices/waterlevels/details:
    get:
      tags: ["API v1 - Produktiv"]
      summary: "Erhalte detaillierte Sensordaten eines bestimmten Wasserstand-Geräts"
      description: "Dieser Endpunkt liefert detaillierte Informationen und aktuelle Sensordaten eines spezifischen Wasserstand-Sensors. Die Daten beinhalten Informationen wie Batteriestand, Distanzmessungen, Wasserstand, Gewässername und Meldestufe."
      parameters:
        - name: device
          in: query
          required: true
          schema:
            type: string
          example: LDDS75_Naunhof_2
          description: "Name des Wasserstand-Geräts, dessen Details abgefragt werden sollen"
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: "Detaillierte Informationen eines Wasserstand-Geräts"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        properties:
                          type: object
                          properties:
                            binaryStatus:
                              type: integer
                              enum: [0, 1]
                            id:
                              type: string
                            active:
                              type: boolean
                            name:
                              type: string
                            displayName:
                              type: string
                            status:
                              type: string
                            lastSeen:
                              type: string
                            measurement:
                              type: string
                            openSenseMap:
                              type: string
                            url:
                              type: string
                            fields:
                              type: object
                              properties:
                                bat:
                                  type: number
                                  description: "Batteriestand in Volt"
                                distance:
                                  type: number
                                  description: "Gemessene Distanz in mm"
                                distance_to_ground:
                                  type: number
                                  description: "Distanz zum Boden in mm"
                                latitude:
                                  type: number
                                  description: "Breitengrad des Sensors"
                                longitude:
                                  type: number
                                  description: "Längengrad des Sensors"
                                meldestufe:
                                  type: integer
                                  description: "Aktuelle Hochwasser-Meldestufe"
                                us_sensor:
                                  type: integer
                                  description: "Status des Ultraschall-Sensors"
                                water:
                                  type: string
                                  description: "Name des Gewässers"
                                water_level:
                                  type: number
                                  description: "Aktueller Wasserstand in cm"
                                water_temp:
                                  type: number
                                  description: "Die Wassertemperatur in Grad Celsius (falls vom Sensor unterstützt)."
                                water_depth:
                                  type: number
                                  description: "Gemessene Wassertiefe in cm (falls vom Sensor unterstützt)."
                                battery_voltage:
                                  type: number
                                  description: "Spannung der externen Stromversorgung in Volt (falls vom Sensor unterstützt)."
                                current_4_20ma:
                                  type: number
                                  description: "Messwert des 4-20mA Analogeingangs in Milliampere (falls vom Sensor unterstützt)."
                                voltage_input:
                                  type: number
                                  description: "Messwert des analogen Spannungseingangs in Volt (falls vom Sensor unterstützt)."
                        geometry:
                          type: object
                          properties:
                            type:
                              type: string
                            coordinates:
                              type: array
                              items:
                                type: number
              examples:
                waterLevelDetailsExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        properties:
                          binaryStatus: 1
                          id: "eui-a84041e01188c969"
                          active: true
                          name: "LDDS75 Naunhof 2"
                          displayName: "LDDS75 Naunhof 2"
                          status: "Online"
                          lastSeen: "28.3.2025, 21:05:17"
                          measurement: "LDDS75_Naunhof_2"
                          openSenseMap: ""
                          url: "https://sensoren.makerspace-partheland.de/d/ae459r4tpq03ke/pegelstande"
                          fields:
                            bat: 3.328
                            distance: 1583
                            distance_to_ground: 1600
                            latitude: 51.000000
                            longitude: 12.000000
                            meldestufe: 0
                            us_sensor: 1
                            water: "Parthe"
                            water_level: 17
                            water_temp: 15.2
                            water_depth: 52.78
                            battery_voltage: 3.335
                            current_4_20ma: 6.815
                            voltage_input: 0
                        geometry:
                          type: "Point"
                          coordinates: [12.000000, 51.000000]

  /v2/geojson/devices:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte alle Geräte im GeoJSON-Format (v2)"
      description: |
        Neue API-Version mit verbesserter GeoJSON-Struktur und erweiterten Metadaten.
        Live-Daten befinden sich kurz vor dem Abschluss der Entwicklung; die Datenmodelle gelten als stabil, lediglich Detailanpassungen sind noch möglich.
        Die Attribute `osm` (openSenseMap) und `mspl` (Makerspace Partheland) liefern Links zu Visualisierungsoberflächen, auf denen Messwerte im jeweiligen Portal eingesehen werden können.
      parameters:
        - name: x-api-key
          in: header
          required: false
          schema:
            type: string
          description: "API-Key für detaillierte Attribute (z.B. interne Metadaten); ohne Key werden nur freigegebene Attribute ausgegeben."
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [SenseBoxDevice, WaterLevelDevice, TemperatureDevice]
          description: "Filter für Gerätetyp (Dropdown)"
        - name: device
          in: query
          required: false
          schema:
            type: string
          description: "Filter für ein spezifisches Gerät (frei eingeben)"
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: "Alias zu 'device'; Geräte-ID oder Measurement-Name (z. B. Beucha_Nr1)."
        - name: location
          in: query
          required: false
          schema:
            type: string
          description: "Standort-Aggregation (z.B. naunhof, brandis oder * für alle Standorte im Partheland)."
        - name: sensor
          in: query
          required: false
          schema:
            type: string
            enum: [temperature, noise, humidity, pressure, water_level, pm10, pm2_5, uv, illuminance]
          description: |
            Sensorname für Standort-Aggregation. Muss zusammen mit `location` angegeben werden.
            Unterstützte Sensoren:
            - temperature (CEL): Lufttemperatur
            - noise (DB): Schallpegel
            - humidity (P1): relative Luftfeuchte
            - pressure (HPA): Luftdruck
            - water_level (MMT): Wasserstand
            - pm10 (GQ): Feinstaub PM10
            - pm2_5 (GQ): Feinstaub PM2.5
            - uv (UV): UV-Intensität
            - illuminance (LX): Beleuchtungsstärke
        - name: aggregation
          in: query
          required: false
          schema:
            type: string
            enum: [median, mean, min, max, latest]
            default: median
          description: "Aggregation für Standort-Aggregation (Standard: median)."
      responses:
        '200':
          description: "GeoJSON-FeatureCollection mit allen Geräten oder Standort-Aggregationen"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceOrLocationGeoJSONResponseV2'
              examples:
                senseBox:
                  summary: "SenseBox-Gerät mit Detaildaten"
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        id: "mspl-70b3d57ed004ce79"
                        geometry:
                          type: "Point"
                          coordinates: [12.586797, 51.283337]
                        properties:
                          name: "sensebox-naunhof"
                          type: "SenseBoxDevice"
                          status: "online"
                          last_seen: "2025-10-11T19:31:10.538Z"
                          last_seen_de: "11.10.2025, 21:31:10"
                          attributes:
                            osm: "https://opensensemap.org/explore/62115bc4e00700001bec2e11"
                            mspl: "https://sensoren.makerspace-partheland.de/d/f03fd776-08e7-4537-a463-b13c85e415e1/station-naunhof-nr-1"
                            measurement: "Naunhof_Nr1"
                            displayname: "Naunhof Nr 1"
                          measurements:
                            temperature:
                              value: 13.8
                              unit: "CEL"
                              timestamp: "2025-10-11T19:34:22.000Z"
                          pm2_5:
                            value: 4.2
                            unit: "GQ"
                            timestamp: "2025-10-11T19:34:22.000Z"
                waterLevel:
                  summary: "Wasserstandssensor (WaterLevelDevice)"
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        id: "eui-a84041a17359b296"
                        geometry:
                          type: "Point"
                          coordinates: [12.581094503402712, 51.28500540377473]
                        properties:
                          name: "LDDS75 Naunhof 1"
                          type: "WaterLevelDevice"
                          status: "online"
                          last_seen: "2025-10-11T20:37:38.828Z"
                          last_seen_de: "11.10.2025, 22:37:38"
                          attributes:
                            mspl: "https://sensoren.makerspace-partheland.de/d/ae459r4tpq03ke/pegelstande"
                            measurement: "LDDS75_Naunhof_1"
                            displayname: "Parthe 1"
                          measurements:
                            water_level:
                              value: 180
                              unit: "MMT"
                              timestamp: "2025-10-11T21:17:32.000Z"
                locationAggregation:
                  summary: "Standort-Aggregation (location + sensor)"
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        geometry:
                          type: "Point"
                          coordinates: [12.586797, 51.283337]
                        properties:
                          location: "naunhof"
                          sensor: "temperature"
                          aggregation: "median"
                          value: 13.7
                          unit: "CEL"
                          deviceCount: 8
                          devices:
                            - "Naunhof_Nr1"
                            - "Naunhof_Nr3"
                            - "Naunhof_Nr5"
                          timestamp: "2025-10-11T19:35:14.264Z"
        '400':
          description: "Ungültiger Parameter (z.B. falsche Kombination von location/sensor mit type/id, unbekannter Sensor oder Aggregation)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '401':
          description: "API-Key erforderlich oder ungültig für angeforderte Detailinformationen."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '404':
          description: "Kein Gerät bzw. keine Messwerte zur Abfrage gefunden."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'

  /v2/geojson/devices/{type}:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte Geräte eines spezifischen Typs im GeoJSON-Format (v2)"
      description: |
        Filtert Geräte nach Typ (SenseBoxDevice, WaterLevelDevice oder TemperatureDevice).
        Live-Daten befinden sich kurz vor dem Abschluss der Entwicklung; größere Änderungen an den GeoJSON-Strukturen sind derzeit nicht geplant.
        Die Attribute `osm` (openSenseMap) und `mspl` (Makerspace Partheland) verlinken direkt auf die jeweiligen Portale zur Visualisierung derselben Messwerte.
        Standort-Aggregationen (`location`, `sensor`, `aggregation`) sind auf der Typ-Route derzeit nicht verfügbar und für eine zukünftige Version geplant; nutzen Sie dafür /v2/geojson/devices.
      parameters:
        - name: x-api-key
          in: header
          required: false
          schema:
            type: string
          description: "API-Key für detaillierte Attribute (z.B. interne Metadaten); ohne Key werden nur freigegebene Attribute ausgegeben."
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [SenseBoxDevice, WaterLevelDevice, TemperatureDevice]
          description: "Gerätetyp (Dropdown)"
        - name: device
          in: query
          required: false
          schema:
            type: string
          description: "Filter für ein spezifisches Gerät (frei eingeben)"
      responses:
        '200':
          description: "GeoJSON-FeatureCollection mit gefilterten Geräten"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGeoJSONResponseV2'
        '401':
          description: "API-Key erforderlich oder ungültig für angeforderte Detailinformationen."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '404':
          description: "Kein Gerät für die Kombination aus Typ und Filter gefunden."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '400':
          description: "Ungültiger Gerätetyp"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'

  /v2/ngsi-ld/entities:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte Geräte im NGSI-LD Format (v2)"
      description: |
        Neue API-Version mit NGSI-LD Kontext für Smart City Anwendungen.
        Live-Daten befinden sich kurz vor dem Abschluss der Entwicklung; größere Änderungen an den vorhandenen Entitäten sind nur noch in Ausnahmefällen zu erwarten.
        Die Attribute `osm` (openSenseMap) und `mspl` (Makerspace Partheland) innerhalb der bereitgestellten Gerätedaten verweisen auf die jeweiligen UI-Portale mit identischen Messwerten.
        Standort-Aggregationen (`location`, `sensor`, `aggregation`) liefern NGSI-LD Location-Entitäten mit aggregierten Messwerten je Standort.
      parameters:
        - name: x-api-key
          in: header
          required: false
          schema:
            type: string
          description: "API-Key für detaillierte Attribute (z.B. interne Metadaten); ohne Key werden nur freigegebene Attribute ausgegeben."
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [WaterLevelDevice, SenseBoxDevice, TemperatureDevice]
          description: "NGSI-LD Entity-Typ (Dropdown)"
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: "Geräte-ID oder Measurement-Name (z.B. Beucha_Nr1, LDDS75_Naunhof_2, LSN50_001_Kirchbruch_Beucha) – keine URN! (frei eingeben)"
          example: LSN50_001_Kirchbruch_Beucha
        - name: location
          in: query
          required: false
          schema:
            type: string
          description: "Standort-Aggregation (z.B. naunhof, brandis oder * für alle Standorte)."
        - name: sensor
          in: query
          required: false
          schema:
            type: string
            enum: [temperature, noise, humidity, pressure, water_level, pm10, pm2_5, uv, illuminance]
          description: |
            Sensorname für Standort-Aggregation. Muss zusammen mit `location` angegeben werden.
            Unterstützte Sensoren:
            - temperature (CEL): Lufttemperatur
            - noise (DB): Schallpegel
            - humidity (P1): relative Luftfeuchte
            - pressure (HPA): Luftdruck
            - water_level (MMT): Wasserstand
            - pm10 (GQ): Feinstaub PM10
            - pm2_5 (GQ): Feinstaub PM2.5
            - uv (UV): UV-Intensität
            - illuminance (LX): Beleuchtungsstärke
        - name: aggregation
          in: query
          required: false
          schema:
            type: string
            enum: [median, mean, min, max, latest]
            default: median
          description: "Aggregation für Standort-Aggregation (Standard: median)."
      responses:
        '200':
          description: "NGSI-LD Entities"
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "NGSI-LD Entity ID"
                    type:
                      type: string
                      description: "NGSI-LD Entity Type"
                    "@context":
                      type: array
                      items:
                        type: string
                      description: "NGSI-LD Context URLs"
                    properties:
                      type: object
                      description: "Entity Properties"
              examples:
                ngsiLdExample:
                  value:
                    - id: "urn:ngsi-ld:Device:eui-a84041a17359b296"
                      type: "WaterLevelDevice"
                      "@context":
                        - "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
                        - "https://makerspace-partheland.de/ngsi-ld/v1/"
                      name:
                        type: "Property"
                        value: "LDDS75 Naunhof 1"
                      deviceType:
                        type: "Property"
                        value: "waterlevel"
                      location:
                        type: "GeoProperty"
                        value:
                          type: "Point"
                          coordinates: [12.581094503402712, 51.28500540377473]
                      status:
                        type: "Property"
                        value: "online"
                        observedAt: "2025-10-11T20:37:38.828Z"
                      battery:
                        type: "Property"
                        value: 3.283
                        unitCode: "VLT"
                        observedAt: "2025-10-11T21:17:32.000Z"
                      distance:
                        type: "Property"
                        value: 1640
                        unitCode: "MMT"
                        observedAt: "2025-10-11T21:17:32.000Z"
                      distance_to_ground:
                        type: "Property"
                        value: 1820
                        unitCode: "MMT"
                        observedAt: "2025-10-11T21:17:32.000Z"
                      water_name:
                        type: "Property"
                        value: "Parthe 1"
                        unitCode: "C62"
                        observedAt: "2025-10-11T21:17:32.000Z"
                      water_level:
                        type: "Property"
                        value: 180
                        unitCode: "MMT"
                        observedAt: "2025-10-11T21:17:32.000Z"
                    - id: "urn:ngsi-ld:Device:eui-a840410000000101"
                      type: "TemperatureDevice"
                      "@context":
                        - "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
                        - "https://makerspace-partheland.de/ngsi-ld/v1/"
                      name:
                        type: "Property"
                        value: "LSN50 001 Kirchbruch Beucha"
                      deviceType:
                        type: "Property"
                        value: "temperature"
                      location:
                        type: "GeoProperty"
                        value:
                          type: "Point"
                          coordinates: [12.567174780249111, 51.32401979862517]
                      status:
                        type: "Property"
                        value: "online"
                        observedAt: "2025-10-11T21:07:58.237Z"
                      temperature_1:
                        type: "Property"
                        value: 14.4
                        unitCode: "CEL"
                        observedAt: "2025-10-11T21:07:51.000Z"
                      temperature_2:
                        type: "Property"
                        value: 13.1
                        unitCode: "CEL"
                        observedAt: "2025-10-11T21:07:51.000Z"
                locationAggregation:
                  summary: "Standort-Aggregation (location + sensor)"
                  value:
                    id: "urn:ngsi-ld:Location:naunhof"
                    type: "Location"
                    location:
                      type: "GeoProperty"
                      value:
                        type: "Point"
                        coordinates: [12.586797, 51.283337]
                    temperature:
                      type: "Property"
                      value: 13.7
                      unitCode: "CEL"
                      observedAt: "2025-10-11T19:35:14.264Z"
                    aggregation:
                      type: "Property"
                      value: "median"
                    deviceCount:
                      type: "Property"
                      value: 8
                    devices:
                      type: "Property"
                      value:
                        - "Naunhof_Nr1"
                        - "Naunhof_Nr3"
                        - "Naunhof_Nr5"
                    "@context":
                      - "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
                      - "https://makerspace-partheland.de/ngsi-ld/v1/"
        '400':
          description: "Ungültiger Parameter (z.B. falsche Kombination von location/sensor mit id/type, unbekannter Sensor oder Aggregation)."
        '401':
          description: "API-Key erforderlich oder ungültig für angeforderte Detailinformationen."
        '404':
          description: "Kein Gerät bzw. keine Messwerte zur Abfrage gefunden."

  /v2/geojson/history/devices/{id}:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Historische Messwerte im GeoJSON-Format (v2)"
      description: |
        Liefert historische Messwerte eines Geräts als GeoJSON-FeatureCollection.
        Hinweis: Die historischen Daten befinden sich in aktiver Entwicklung; Schnittstellen und Struktur können sich kurzfristig ändern.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Geräte-ID oder Measurement-Name (z.B. Beucha_Nr1, LDDS75_Naunhof_2)"
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [SenseBoxDevice, WaterLevelDevice, TemperatureDevice]
          description: "Optionaler Hinweis auf den Gerätetyp zur gezielten Auswahl"
        - name: start
          in: query
          required: false
          schema:
            type: string
          description: "Startzeitpunkt (ISO 8601, relativer Offset wie -24h oder now())"
        - name: end
          in: query
          required: false
          schema:
            type: string
          description: "Endzeitpunkt (ISO 8601, relativer Offset wie -1h oder now())"
        - name: aggregation
          in: query
          required: false
          schema:
            type: string
            enum: [none, median, mean, min, max, latest]
          description: "Optionale Aggregation der Zeitreihe"
        - name: interval
          in: query
          required: false
          schema:
            type: string
          description: "Zeit-Binning (z.B. 5m, 1h)"
      responses:
        '200':
          description: "Historische Messwerte als GeoJSON-FeatureCollection"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONResponse'
        '400':
          description: "Ungültiger Parameter (z.B. fehlende ID oder ungültiger Zeitraum)"
        '404':
          description: "Keine Messwerte für die Kombination aus Gerät und Zeitraum gefunden"

  /v2/ngsi-ld/temporal/entities/{id}:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Historische Messwerte im NGSI-LD-Temporalformat (v2)"
      description: |
        Liefert historische Messwerte eines Geräts im NGSI-LD Temporal Response Format.
        Hinweis: Die historischen Daten befinden sich in aktiver Entwicklung; Struktur und Feldnamen können sich kurzfristig ändern.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Geräte-ID oder Measurement-Name (z.B. Beucha_Nr1, LDDS75_Naunhof_2)"
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [SenseBoxDevice, WaterLevelDevice, TemperatureDevice]
          description: "Optionaler NGSI-LD-Gerätetyp"
        - name: start
          in: query
          required: false
          schema:
            type: string
          description: "Startzeitpunkt (ISO 8601 oder relativer Offset)"
        - name: end
          in: query
          required: false
          schema:
            type: string
          description: "Endzeitpunkt (ISO 8601 oder relativer Offset)"
        - name: aggregation
          in: query
          required: false
          schema:
            type: string
            enum: [none, median, mean, min, max, latest]
          description: "Optionale Aggregation der Messwerte"
        - name: interval
          in: query
          required: false
          schema:
            type: string
          description: "Zeit-Binning (z.B. 5m, 1h)"
      responses:
        '200':
          description: "NGSI-LD Temporal Response mit historischen Messwerten"
          content:
            application/ld+json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: "Ungültiger Parameter (z.B. fehlende ID oder ungültiger Zeitraum)"
        '404':
          description: "Keine Messwerte für die Kombination aus Gerät und Zeitraum gefunden"

  /v2/geojson/gateways:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte Gateways im GeoJSON-Format (v2)"
      description: |
        Liefert alle bekannten Gateways als GeoJSON-FeatureCollection. Status basiert auf den letzten Status-/Uplink-Zeitpunkten.
      parameters:
        - name: x-api-key
          in: header
          required: false
          schema:
            type: string
          description: "API-Key für detaillierte Attribute (z. B. interne Metadaten)."
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: "Gateway-ID (optional)"
      responses:
        '200':
          description: "GeoJSON-FeatureCollection mit Gateways"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONResponse'
              examples:
                gatewayExample:
                  value:
                    type: "FeatureCollection"
                    features:
                      - type: "Feature"
                        id: "db-ware-gateway-dreimu-001"
                        geometry:
                          type: "Point"
                          coordinates: [12.467993795871735, 51.218953978312285]
                        properties:
                          name: "db-ware Gateway Dreiskau-Muckern 001"
                          type: "Gateway"
                          attributes: {}
                          last_seen_de: "11.10.2025, 23:46:21"
                          last_seen: "2025-10-11T21:46:21.362Z"
                          status: "Online"
        '400':
          description: "Ungültiger Parameter"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '401':
          description: "API-Key erforderlich oder ungültig"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '404':
          description: "Kein Gateway gefunden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'

  /v2/geojson/gateways/{id}:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte ein Gateway im GeoJSON-Format (v2)"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Gateway-ID"
      responses:
        '200':
          description: "GeoJSON-FeatureCollection mit einem Gateway"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONResponse'
        '404':
          description: "Gateway nicht gefunden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'

  /v2/ngsi-ld/entities/gateways:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte Gateways im NGSI-LD-Format (v2)"
      parameters:
        - name: x-api-key
          in: header
          required: false
          schema:
            type: string
          description: "API-Key für detaillierte Attribute (z. B. interne Metadaten)."
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: "Gateway-ID (optional)"
      responses:
        '200':
          description: "NGSI-LD Gateway Entities"
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  type: object
              examples:
                gatewayNgsiExample:
                  value:
                    - id: "urn:ngsi-ld:Gateway:db-ware-gateway-dreimu-001"
                      type: "Gateway"
                      name:
                        type: "Property"
                        value: "db-ware Gateway Dreiskau-Muckern 001"
                      gatewayType:
                        type: "Property"
                        value: "LoRaWAN"
                      location:
                        type: "GeoProperty"
                        value:
                          type: "Point"
                          coordinates: [12.467993795871735, 51.218953978312285]
                      status:
                        type: "Property"
                        value: "Online"
                        observedAt: "2025-10-11T21:46:21.362Z"
                      "@context":
                        - "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
                        - "https://makerspace-partheland.de/ngsi-ld/v1/"
        '400':
          description: "Ungültiger Parameter"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '401':
          description: "API-Key erforderlich oder ungültig"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
        '404':
          description: "Kein Gateway gefunden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'

  /v2/ngsi-ld/entities/gateways/{id}:
    get:
      tags: ["API v2 - Unter Entwicklung"]
      summary: "Erhalte ein Gateway im NGSI-LD-Format (v2)"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Gateway-ID"
      responses:
        '200':
          description: "NGSI-LD Gateway Entity"
          content:
            application/ld+json:
              schema:
                type: object
        '404':
          description: "Gateway nicht gefunden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseV2'
